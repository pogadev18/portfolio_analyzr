generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Necessary for Next auth
model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model User {
  id              String           @id @default(cuid())
  name            String?
  email           String?          @unique
  emailVerified   DateTime?
  image           String?
  accounts        Account[]
  sessions        Session[]
  portfolios      Portfolio[]
  investmentYears InvestmentYear[]
  investments     Investment[]
}

model Portfolio {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name        String
  description String?

  User   User   @relation(fields: [userId], references: [id])
  userId String // this will be in the database in the Portfolio table

  investmentYears InvestmentYear[]
  investments     Investment[]
}

model InvestmentYear {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  year        String
  sumToInvest String
  currency    String

  User   User   @relation(fields: [userId], references: [id])
  userId String // this will be in the database in the Portfolio table

  Portfolio   Portfolio    @relation(fields: [portfolioId], references: [id])
  portfolioId String // this will be in the database in the Investment table

  Investment  Investment[]
}

model Investment {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  date     String
  etf      String
  alias    String?
  units    String
  amount   String
  currency String
  investmentYear String

  User   User   @relation(fields: [userId], references: [id])
  userId String // this will be in the database in the Investment table

  Portfolio   Portfolio @relation(fields: [portfolioId], references: [id])
  portfolioId String // this will be in the database in the Investment table

  InvestmentYear   InvestmentYear @relation(fields: [investmentYearId], references: [id])
  investmentYearId String // this will be in the database in the Investment table
}
